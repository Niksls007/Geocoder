# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'menu_design.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWebEngineWidgets import *

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1000, 780)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMinimumSize(QtCore.QSize(1000, 780))
        MainWindow.setMaximumSize(QtCore.QSize(1000, 780))
        MainWindow.setStyleSheet("\n"
"background-color: #404040;\n"
"\n"
"")
        MainWindow.setIconSize(QtCore.QSize(30, 30))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(10, 10, 981, 771))
        self.tabWidget.setStyleSheet("QWidget {\n"
"background-color: rgb(64, 64, 64);\n"
" border: 4px solid rgb(64, 64, 64);  \n"
"\n"
"}\n"
"QWidget::tab {\n"
"margin: 0px 100px 0px 90px;\n"
"font: 87 11pt \"Roboto\";\n"
"color: rgb(255, 255, 255);\n"
"border: 4px solid  rgb(93, 92, 92);  \n"
" border-radius: 10px;\n"
"background-color: rgb(220, 106, 0);\n"
"    min-height: 40px;\n"
"     min-width: 120px\n"
"}\n"
"QWidget::pane {\n"
"border: 1px solid  rgb(64, 64, 64);\n"
"}\n"
"\n"
"\n"
"QWidget::tab:selected{\n"
"background-color: rgb(255, 132, 0);\n"
"    \n"
"}\n"
"QWidget::tab::!selected{\n"
"\n"
"    \n"
"    background-color: rgb(220, 106, 0);\n"
"\n"
"}\n"
"QWidget::tab:hover{\n"
"background-color: rgb(255, 119, 0);\n"
"}\n"
"")
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tab.sizePolicy().hasHeightForWidth())
        self.tab.setSizePolicy(sizePolicy)
        self.tab.setObjectName("tab")
        self.tableWidget = QtWidgets.QTableWidget(self.tab)
        self.tableWidget.setGeometry(QtCore.QRect(280, 50, 681, 598))
        self.tableWidget.setStyleSheet("QTableView {\n"
"color: rgb(255, 255, 255);\n"
"gridline-color: rgb(93,92,92);\n"
"    font: 10pt \"Roboto\";\n"
"    \n"
"\n"
"   \n"
"    background-color: rgb(64, 64, 64);\n"
"   \n"
"    selection-color: white;\n"
"    selection-background-color: #ff8c00;\n"
"    border: 4px solid #dc6a00;\n"
"    border-radius: 10px;\n"
"    padding: 4px 5px;\n"
"}\n"
"\n"
"\n"
"QHeaderView{\n"
"font: 57 10pt \"Roboto Medium\";\n"
"qproperty-defaultAlignment: AlignCenter;\n"
"background-color:rgb(64, 64, 64);\n"
"border-radius:10px;\n"
"}\n"
"\n"
"\n"
"QHeaderView::section {\n"
"color: white;\n"
"background-color:#dc6a00;\n"
"border: 3px solid #f6f7fa;\n"
"border-radius:10px;\n"
"border-color: #5d5c5c;\n"
"height:30px;\n"
"width:45px;\n"
"}\n"
"\n"
"\n"
"QTableCornerButton::section {\n"
"    background-color: rgb(64, 64, 64);\n"
"}\n"
"\n"
"\n"
" QScrollBar:vertical\n"
" {\n"
"     background-color: rgb(93, 92, 92);\n"
"     width: 20px;\n"
"     margin: 15px 0px 15px 0px;\n"
"     border: 1px transparent #2A2929;\n"
"     border-radius: 9px;\n"
" }\n"
"\n"
" QScrollBar::handle:vertical\n"
" {\n"
"      background-color:  #dc6a00;       \n"
"  min-width: 20px;\n"
"     min-height: 20px;\n"
"     border-radius: 9px;\n"
" }\n"
"\n"
" QScrollBar::sub-line:vertical\n"
" {\n"
"     margin: 3px 0px 3px 0px;\n"
"     border-image: url(:/qss_icons/rc/up_arrow_disabled.png);\n"
"     width: 20px;\n"
"     height: 20px;\n"
"     subcontrol-position: top;\n"
"     subcontrol-origin: margin;\n"
" }\n"
"\n"
" QScrollBar::add-line:vertical\n"
" {\n"
"     margin: 3px 0px 3px 0px;\n"
"     border-image: url(:/qss_icons/rc/down_arrow_disabled.png);\n"
"     height: 10px;\n"
"     width: 10px;\n"
"     subcontrol-position: bottom;\n"
"     subcontrol-origin: margin;\n"
" }\n"
"\n"
" QScrollBar::sub-line:vertical:hover,QScrollBar::sub-line:vertical:on\n"
" {\n"
"\n"
"     border-image: url(:/qss_icons/rc/up_arrow.png);\n"
"     height: 10px;\n"
"     width: 10px;\n"
"     subcontrol-position: top;\n"
"     subcontrol-origin: margin;\n"
" }\n"
"\n"
"\n"
" QScrollBar::add-line:vertical:hover, QScrollBar::add-line:vertical:on\n"
" {\n"
"     border-image: url(:/qss_icons/rc/down_arrow.png);\n"
"     height: 10px;\n"
"     width: 10px;\n"
"     subcontrol-position: bottom;\n"
"     subcontrol-origin: margin;\n"
" }\n"
"\n"
" QScrollBar::up-arrow:vertical, QScrollBar::down-arrow:vertical\n"
" {\n"
"     background: none;\n"
" }\n"
"\n"
"\n"
" QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical\n"
" {\n"
"     background: none;\n"
" }\n"
"\n"
"\n"
"\n"
"\n"
"QScrollBar:horizontal\n"
" {\n"
"     height: 20px;\n"
"     margin: 0px 20px 0px 20px;\n"
"     border: 1px transparent #2A2929;\n"
"     border-radius: 9px; \n"
"    background-color: rgb(93, 92, 92);\n"
" }\n"
"\n"
" QScrollBar::handle:horizontal\n"
" {\n"
"     background-color: #dc6a00;      \n"
"     min-width: 20px;\n"
"     min-height: 20px;\n"
"     border-radius: 9px;\n"
" }\n"
"\n"
" QScrollBar::add-line:horizontal\n"
" {\n"
"     margin: 0px 4px 0px 4px;\n"
"     border-image: url(./images/right_arrow_disabled.png);       \n"
"     width: 20px;\n"
"     height: 20px;\n"
"     subcontrol-position: right;\n"
"     subcontrol-origin: margin;\n"
" }\n"
"\n"
" QScrollBar::sub-line:horizontal\n"
" {\n"
"     margin: 0px 3px 0px 3px;\n"
"     border-image: url(./images/left_arrow_disabled.png);        \n"
"     height: 10px;\n"
"     width: 10px;\n"
"     subcontrol-position: left;\n"
"     subcontrol-origin: margin;\n"
" }\n"
"\n"
" QScrollBar::add-line:horizontal:hover,QScrollBar::add-line:horizontal:on\n"
" {\n"
"     border-image: url(./images/right_arrow.png);               \n"
"     height: 10px;\n"
"     width: 10px;\n"
"     subcontrol-position: right;\n"
"     subcontrol-origin: margin;\n"
" }\n"
"\n"
"\n"
" QScrollBar::sub-line:horizontal:hover, QScrollBar::sub-line:horizontal:on\n"
" {\n"
"     border-image: url(./images/left_arrow.png);               \n"
"     height: 10px;\n"
"     width: 10px;\n"
"     subcontrol-position: left;\n"
"     subcontrol-origin: margin;\n"
" }\n"
"\n"
" QScrollBar::up-arrow:horizontal, QScrollBar::down-arrow:horizontal\n"
" {\n"
"     background: none;\n"
" }\n"
"\n"
"\n"
" QScrollBar::add-page:horizontal, QScrollBar::sub-page:horizontal\n"
" {\n"
"     background: none;\n"
" }\n"
"")
        self.tableWidget.setInputMethodHints(QtCore.Qt.ImhNone)
        self.tableWidget.setSelectionMode(QtWidgets.QAbstractItemView.ExtendedSelection)
        self.tableWidget.setTextElideMode(QtCore.Qt.ElideRight)
        self.tableWidget.setRowCount(20)
        self.tableWidget.setColumnCount(10)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.horizontalHeader().setCascadingSectionResizes(False)
        self.tableWidget.horizontalHeader().setHighlightSections(True)
        self.tableWidget.horizontalHeader().setSortIndicatorShown(False)
        self.tableWidget.verticalHeader().setCascadingSectionResizes(False)
        self.tableWidget.verticalHeader().setSortIndicatorShown(False)
        self.label_2 = QtWidgets.QLabel(self.tab)
        self.label_2.setGeometry(QtCore.QRect(430, 10, 371, 31))
        self.label_2.setStyleSheet("font: 87 13pt \"Roboto\";\n"
"color: rgb(255, 255, 255);\n"
"background-color:none;\n"
" border: none;  \n"
"")
        self.label_2.setObjectName("label_2")
        self.progressBar = QtWidgets.QProgressBar(self.tab)
        self.progressBar.setGeometry(QtCore.QRect(0, 670, 961, 28))
        self.progressBar.setStyleSheet("QProgressBar{\n"
"color: rgb(255, 255, 255);\n"
"font: 57 10pt \"Roboto Medium\";\n"
"text-align: center ;\n"
"  \n"
"}\n"
"QProgressBar:horizontal {\n"
"border: 2px solid white;\n"
"border-radius: 10px;\n"
"background: #5d5c5c;\n"
"\n"
"}\n"
"QProgressBar::chunk:horizontal {\n"
"background-color: rgb(220, 106, 0);\n"
"border-radius: 7px;\n"
"}")
        self.progressBar.setProperty("value", 0)
        self.progressBar.setObjectName("progressBar")
        self.select_csv = QtWidgets.QPushButton(self.tab)
        self.select_csv.setGeometry(QtCore.QRect(100, 60, 61, 61))
        self.select_csv.setStyleSheet("QPushButton{\n"
"\n"
" background: url(./img/csv_imp_off.png);\n"
"background-position: center ;\n"
"border: none;\n"
"}\n"
"\n"
"QPushButton:Hover {\n"
"background: url(./img/csv_imp_hov.png);\n"
"background-position: center ;\n"
"\n"
"}\n"
"QPushButton:pressed {\n"
" background: url(./img/csv_imp_on.png);\n"
"background-position: center ;\n"
"\n"
"}")
        self.select_csv.setText("")
        self.select_csv.setObjectName("select_csv")
        self.label = QtWidgets.QLabel(self.tab)
        self.label.setGeometry(QtCore.QRect(60, 0, 151, 51))
        self.label.setStyleSheet("QLabel{\n"
"font: 87 14pt \"Roboto\";\n"
"color: rgb(255, 255, 255);\n"
"background-color:none;\n"
" border: none;  \n"
"}")
        self.label.setObjectName("label")
        self.Button_start = QtWidgets.QPushButton(self.tab)
        self.Button_start.setGeometry(QtCore.QRect(86, 200, 101, 61))
        self.Button_start.setStyleSheet("\n"
"QPushButton{\n"
"font: 87 10pt \"Roboto\";\n"
"color: rgb(255, 255, 255);\n"
"\n"
"background-color: rgb(220, 106, 0);\n"
"background-position: center ;\n"
" border: 3px solid  rgb(93, 92, 92);  \n"
"    border-radius: 10px;\n"
"}\n"
"\n"
"QPushButton:Hover {\n"
"background-color: rgb(255, 119, 0);\n"
"background-position: center ;\n"
" border: 3px solid  rgb(93, 92, 92);  \n"
"    border-radius: 10px;\n"
"\n"
"}\n"
"QPushButton:pressed {\n"
"background-color: rgb(255, 132, 0);\n"
" border: 3px solid  rgb(93, 92, 92);  \n"
"    border-radius: 10px;\n"
"\n"
"}")
        self.Button_start.setObjectName("Button_start")
        self.checkBox = QtWidgets.QCheckBox(self.tab)
        self.checkBox.setGeometry(QtCore.QRect(30, 270, 241, 31))
        self.checkBox.setStyleSheet("QCheckBox {\n"
"font: 87 9pt \"Roboto\";\n"
"color: rgb(255, 255, 255);\n"
"background-color:none;\n"
" border: none;  \n"
"}\n"
"QCheckBox::indicator:checked {\n"
"    color: #b1b1b1;\n"
"   background: url(./img/check_box.png);\n"
"background-position: center ;\n"
"background-color: rgb(93, 92, 92);\n"
"    border: 2px solid rgb(93, 92, 92);\n"
"    border-radius: 5px;\n"
"    width: 12px;\n"
"    height: 12px;\n"
"    \n"
"} \n"
"QCheckBox::indicator:unchecked {\n"
"    color: #b1b1b1;\n"
"    background-color: rgb(93, 92, 92);\n"
"    border: 2px solid rgb(93, 92, 92);\n"
"    border-radius: 5px;\n"
"    width: 12px;\n"
"    height:12px;\n"
"    \n"
"} ")
        self.checkBox.setObjectName("checkBox")
        self.lineEdit_id = QtWidgets.QLineEdit(self.tab)
        self.lineEdit_id.setGeometry(QtCore.QRect(0, 420, 271, 31))
        self.lineEdit_id.setStyleSheet("QLineEdit {\n"
"font: 10pt \"Roboto\";\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(93, 92, 92);\n"
" border: 3px solid  #dc6a00;  \n"
"    border-radius: 10px;\n"
"}\n"
"QToolTip { \n"
"background-color: rgb(64, 64, 64); \n"
"color: white; \n"
"border: 2px solid  rgb(93, 92, 92);\n"
"}")
        self.lineEdit_id.setText("")
        self.lineEdit_id.setObjectName("lineEdit_id")
        self.label_id = QtWidgets.QLabel(self.tab)
        self.label_id.setGeometry(QtCore.QRect(30, 380, 211, 31))
        self.label_id.setStyleSheet("color: rgb(255, 255, 255);\n"
"font: 57 10pt \"Roboto Medium\";\n"
"background-color:none;\n"
"border: none;  \n"
"\n"
"")
        self.label_id.setObjectName("label_id")
        self.Button_check_id = QtWidgets.QPushButton(self.tab)
        self.Button_check_id.setGeometry(QtCore.QRect(25, 490, 221, 51))
        self.Button_check_id.setStyleSheet("\n"
"QPushButton{\n"
"font: 87 10pt \"Roboto\";\n"
"color: rgb(255, 255, 255);\n"
"\n"
"background-color: rgb(220, 106, 0);\n"
"background-position: center ;\n"
" border: 3px solid  rgb(93, 92, 92);  \n"
"    border-radius: 10px;\n"
"}\n"
"\n"
"QPushButton:Hover {\n"
"background-color: rgb(255, 119, 0);\n"
"background-position: center ;\n"
" border: 3px solid  rgb(93, 92, 92);  \n"
"    border-radius: 10px;\n"
"\n"
"}\n"
"QPushButton:pressed {\n"
"background-color: rgb(255, 132, 0);\n"
" border: 3px solid  rgb(93, 92, 92);  \n"
"    border-radius: 10px;\n"
"\n"
"}\n"
"\n"
"QToolTip { \n"
"background-color: rgb(64, 64, 64); \n"
"color: white; \n"
"border: 2px solid  rgb(93, 92, 92);\n"
"}")
        self.Button_check_id.setObjectName("Button_check_id")
        self.Button_check_id_auto = QtWidgets.QPushButton(self.tab)
        self.Button_check_id_auto.setGeometry(QtCore.QRect(25, 590, 221, 51))
        self.Button_check_id_auto.setStyleSheet("\n"
"QPushButton{\n"
"font: 87 10pt \"Roboto\";\n"
"color: rgb(255, 255, 255);\n"
"\n"
"background-color: rgb(220, 106, 0);\n"
"background-position: center ;\n"
" border: 3px solid  rgb(93, 92, 92);  \n"
"    border-radius: 10px;\n"
"}\n"
"\n"
"QPushButton:Hover {\n"
"background-color: rgb(255, 119, 0);\n"
"background-position: center ;\n"
" border: 3px solid  rgb(93, 92, 92);  \n"
"    border-radius: 10px;\n"
"\n"
"}\n"
"QPushButton:pressed {\n"
"background-color: rgb(255, 132, 0);\n"
" border: 3px solid  rgb(93, 92, 92);  \n"
"    border-radius: 10px;\n"
"\n"
"}\n"
"\n"
"QToolTip { \n"
"background-color: rgb(64, 64, 64); \n"
"color: white; \n"
"border: 2px solid  rgb(93, 92, 92);\n"
"}")
        self.Button_check_id_auto.setObjectName("Button_check_id_auto")
        self.checkBox_create_json = QtWidgets.QCheckBox(self.tab)
        self.checkBox_create_json.setGeometry(QtCore.QRect(30, 320, 251, 31))
        self.checkBox_create_json.setStyleSheet("QCheckBox {\n"
"font: 87 9pt \"Roboto\";\n"
"color: rgb(255, 255, 255);\n"
"background-color:none;\n"
" border: none;  \n"
"}\n"
"QCheckBox::indicator:checked {\n"
"    color: #b1b1b1;\n"
"   background: url(./img/check_box.png);\n"
"background-position: center ;\n"
"background-color: rgb(93, 92, 92);\n"
"    border: 2px solid rgb(93, 92, 92);\n"
"    border-radius: 5px;\n"
"    width: 12px;\n"
"    height: 12px;\n"
"    \n"
"} \n"
"QCheckBox::indicator:unchecked {\n"
"    color: #b1b1b1;\n"
"    background-color: rgb(93, 92, 92);\n"
"    border: 2px solid rgb(93, 92, 92);\n"
"    border-radius: 5px;\n"
"    width: 12px;\n"
"    height:12px;\n"
"    \n"
"} \n"
"QToolTip { \n"
"background-color: rgb(64, 64, 64); \n"
"color: white; \n"
"border: 2px solid  rgb(93, 92, 92);\n"
"}")
        self.checkBox_create_json.setObjectName("checkBox_create_json")
        self.comboBox_delimiter = QtWidgets.QComboBox(self.tab)
        self.comboBox_delimiter.setGeometry(QtCore.QRect(220, 140, 41, 31))
        self.comboBox_delimiter.setStyleSheet("QComboBox {\n"
"font: 10pt \"Roboto\";\n"
"padding: 5px 5px 5px 5px;\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(93, 92, 92);\n"
" border: 3px solid  #dc6a00;  \n"
"    border-radius: 5px;\n"
"\n"
"}\n"
"QComboBox QAbstractItemView {\n"
"\n"
"    background-color:  rgb(93, 92, 92);\n"
"    border: 3px solid #dc6a00;\n"
"    border-radius: 5px;\n"
"    color: white;\n"
"    padding: 5px 5px 5px 5px;\n"
"    selection-background-color: rgb(88, 88, 88);\n"
"    selection-color: rgb(200, 200, 200);\n"
"}\n"
"\n"
"QComboBox::drop-down \n"
"{\n"
"    border: 0px; \n"
"}\n"
"QComboBox::down-arrow{\n"
" background: url(./img/arrow_combo_box-3.png);\n"
"background-position: center ;\n"
"border:  rgb(93, 92, 92);\n"
"border-radius: 5px;\n"
"\n"
"}\n"
"QComboBox:on { \n"
"    padding-top: 3px;\n"
"    padding-left: 4px;\n"
"}\n"
"QComboBox::down-arrow:on {\n"
"    top: 1px;\n"
"    left: 1px;\n"
"}\n"
"")
        self.comboBox_delimiter.setObjectName("comboBox_delimiter")
        self.comboBox_delimiter.addItem("")
        self.comboBox_delimiter.addItem("")
        self.label_id_3 = QtWidgets.QLabel(self.tab)
        self.label_id_3.setGeometry(QtCore.QRect(30, 140, 161, 31))
        self.label_id_3.setStyleSheet("color: rgb(255, 255, 255);\n"
"font: 57 10pt \"Roboto Medium\";\n"
"background-color:none;\n"
"border: none;  \n"
"\n"
"")
        self.label_id_3.setObjectName("label_id_3")
        self.loading = QtWidgets.QLabel(self.tab)
        self.loading.setGeometry(QtCore.QRect(340, 300, 321, 51))
        self.loading.setMinimumSize(QtCore.QSize(321, 51))
        self.loading.setMaximumSize(QtCore.QSize(321, 51))
        self.loading.setStyleSheet("QLabel{\n"
"font: 87 16pt \"Roboto\";\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(93, 92, 92);\n"
" border: 3px solid  #dc6a00;  \n"
"    border-radius: 10px;\n"
"}")
        self.loading.setObjectName("loading")
        self.tabWidget.addTab(self.tab, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.listWidget = QtWidgets.QListWidget(self.tab_3)
        self.listWidget.setGeometry(QtCore.QRect(10, 80, 341, 192))
        self.listWidget.setSizeIncrement(QtCore.QSize(0, 0))
        self.listWidget.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.listWidget.setWhatsThis("")
        self.listWidget.setStyleSheet("QListWidget {\n"
" color: white;\n"
"background-color: rgb(64, 64, 64);\n"
" border: 4px solid #dc6a00;  \n"
"    border-radius: 10px;\n"
"    padding: 2px 5px;\n"
"}\n"
"QListWidget::item\n"
"{\n"
"    background:rgb(64, 64, 64);\n"
"}\n"
"QListWidget::item:selected\n"
"{\n"
"  background-color: rgb(255, 132, 0);\n"
"border-image: url(:/qss_icons/rc/up_arrow_disabled.png);\n"
"} \n"
"\n"
"QListView::indicator:checked{\n"
"    color: #b1b1b1;\n"
"   background: url(./img/check_box.png);\n"
"background-position: center ;\n"
"background-color: rgb(93, 92, 92);\n"
"    border: 2px solid rgb(93, 92, 92);\n"
"    border-radius: 5px;\n"
"    width: 12px;\n"
"    height: 12px;\n"
"    \n"
"} \n"
"QListView::indicator:unchecked  {\n"
"    color: #b1b1b1;\n"
"    background-color: rgb(93, 92, 92);\n"
"    border: 2px solid rgb(93, 92, 92);\n"
"    border-radius: 5px;\n"
"    width: 12px;\n"
"    height:12px;\n"
"    \n"
"} \n"
" QScrollBar:vertical\n"
" {\n"
"     background-color: rgb(93, 92, 92);\n"
"     width: 20px;\n"
"     margin: 15px 0px 15px 0px;\n"
"     border: 1px transparent #2A2929;\n"
"     border-radius: 9px;\n"
" }\n"
"\n"
" QScrollBar::handle:vertical\n"
" {\n"
"      background-color:  #dc6a00;       \n"
"  min-width: 20px;\n"
"     min-height: 20px;\n"
"     border-radius: 9px;\n"
" }\n"
"\n"
" QScrollBar::sub-line:vertical\n"
" {\n"
"     margin: 3px 0px 3px 0px;\n"
"     border-image: url(:/qss_icons/rc/up_arrow_disabled.png);\n"
"     width: 20px;\n"
"     height: 20px;\n"
"     subcontrol-position: top;\n"
"     subcontrol-origin: margin;\n"
" }\n"
"\n"
" QScrollBar::add-line:vertical\n"
" {\n"
"     margin: 3px 0px 3px 0px;\n"
"     border-image: url(:/qss_icons/rc/down_arrow_disabled.png);\n"
"     height: 10px;\n"
"     width: 10px;\n"
"     subcontrol-position: bottom;\n"
"     subcontrol-origin: margin;\n"
" }\n"
"\n"
" QScrollBar::sub-line:vertical:hover,QScrollBar::sub-line:vertical:on\n"
" {\n"
"\n"
"     border-image: url(:/qss_icons/rc/up_arrow.png);\n"
"     height: 10px;\n"
"     width: 10px;\n"
"     subcontrol-position: top;\n"
"     subcontrol-origin: margin;\n"
" }\n"
"\n"
"\n"
" QScrollBar::add-line:vertical:hover, QScrollBar::add-line:vertical:on\n"
" {\n"
"     border-image: url(:/qss_icons/rc/down_arrow.png);\n"
"     height: 10px;\n"
"     width: 10px;\n"
"     subcontrol-position: bottom;\n"
"     subcontrol-origin: margin;\n"
" }\n"
"\n"
" QScrollBar::up-arrow:vertical, QScrollBar::down-arrow:vertical\n"
" {\n"
"     background: none;\n"
" }\n"
"\n"
"\n"
" QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical\n"
" {\n"
"     background: none;\n"
" }\n"
"\n"
"\n"
"\n"
"\n"
"QScrollBar:horizontal\n"
" {\n"
"     height: 20px;\n"
"     margin: 0px 20px 0px 20px;\n"
"     border: 1px transparent #2A2929;\n"
"     border-radius: 9px; \n"
"    background-color: rgb(93, 92, 92);\n"
" }\n"
"\n"
" QScrollBar::handle:horizontal\n"
" {\n"
"     background-color: #dc6a00;      \n"
"     min-width: 20px;\n"
"     min-height: 20px;\n"
"     border-radius: 9px;\n"
" }\n"
"\n"
" QScrollBar::add-line:horizontal\n"
" {\n"
"     margin: 0px 4px 0px 4px;\n"
"     border-image: url(./images/right_arrow_disabled.png);       \n"
"     width: 20px;\n"
"     height: 20px;\n"
"     subcontrol-position: right;\n"
"     subcontrol-origin: margin;\n"
" }\n"
"\n"
" QScrollBar::sub-line:horizontal\n"
" {\n"
"     margin: 0px 3px 0px 3px;\n"
"     border-image: url(./images/left_arrow_disabled.png);        \n"
"     height: 10px;\n"
"     width: 10px;\n"
"     subcontrol-position: left;\n"
"     subcontrol-origin: margin;\n"
" }\n"
"\n"
" QScrollBar::add-line:horizontal:hover,QScrollBar::add-line:horizontal:on\n"
" {\n"
"     border-image: url(./images/right_arrow.png);               \n"
"     height: 10px;\n"
"     width: 10px;\n"
"     subcontrol-position: right;\n"
"     subcontrol-origin: margin;\n"
" }\n"
"\n"
"\n"
" QScrollBar::sub-line:horizontal:hover, QScrollBar::sub-line:horizontal:on\n"
" {\n"
"     border-image: url(./images/left_arrow.png);               \n"
"     height: 10px;\n"
"     width: 10px;\n"
"     subcontrol-position: left;\n"
"     subcontrol-origin: margin;\n"
" }\n"
"\n"
" QScrollBar::up-arrow:horizontal, QScrollBar::down-arrow:horizontal\n"
" {\n"
"     background: none;\n"
" }\n"
"\n"
"\n"
" QScrollBar::add-page:horizontal, QScrollBar::sub-page:horizontal\n"
" {\n"
"     background: none;\n"
" }\n"
"")
        self.listWidget.setLineWidth(1)
        self.listWidget.setMidLineWidth(0)
        self.listWidget.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.listWidget.setAutoScroll(False)
        self.listWidget.setAlternatingRowColors(False)
        self.listWidget.setMovement(QtWidgets.QListView.Static)
        self.listWidget.setObjectName("listWidget")
        self.Button_delete = QtWidgets.QPushButton(self.tab_3)
        self.Button_delete.setGeometry(QtCore.QRect(190, 300, 161, 41))
        self.Button_delete.setStyleSheet("QPushButton{\n"
"font: 87 9pt \"Roboto\";\n"
"color: rgb(255, 255, 255);\n"
"\n"
"background-color: rgb(220, 106, 0);\n"
"background-position: center ;\n"
" border: 3px solid  rgb(93, 92, 92);  \n"
"    border-radius: 10px;\n"
"}\n"
"\n"
"QPushButton:Hover {\n"
"background-color: rgb(255, 119, 0);\n"
"background-position: center ;\n"
" border: 3px solid  rgb(93, 92, 92);  \n"
"    border-radius: 10px;\n"
"\n"
"}\n"
"QPushButton:pressed {\n"
"background-color: rgb(255, 132, 0);\n"
" border: 3px solid  rgb(93, 92, 92);  \n"
"    border-radius: 10px;\n"
"\n"
"}")
        self.Button_delete.setObjectName("Button_delete")
        self.Button_select = QtWidgets.QPushButton(self.tab_3)
        self.Button_select.setGeometry(QtCore.QRect(10, 300, 151, 41))
        self.Button_select.setStyleSheet("QPushButton{\n"
"font: 87 10pt \"Roboto\";\n"
"color: rgb(255, 255, 255);\n"
"\n"
"background-color: rgb(220, 106, 0);\n"
"background-position: center ;\n"
" border: 3px solid  rgb(93, 92, 92);  \n"
"    border-radius: 10px;\n"
"}\n"
"\n"
"QPushButton:Hover {\n"
"background-color: rgb(255, 119, 0);\n"
"background-position: center ;\n"
" border: 3px solid  rgb(93, 92, 92);  \n"
"    border-radius: 10px;\n"
"\n"
"}\n"
"QPushButton:pressed {\n"
"background-color: rgb(255, 132, 0);\n"
" border: 3px solid  rgb(93, 92, 92);  \n"
"    border-radius: 10px;\n"
"}")
        self.Button_select.setObjectName("Button_select")
        self.label_3 = QtWidgets.QLabel(self.tab_3)
        self.label_3.setGeometry(QtCore.QRect(70, 0, 211, 31))
        self.label_3.setStyleSheet("font: 87 14pt \"Roboto\";\n"
"color: rgb(255, 255, 255);\n"
"background-color:none;\n"
"border: none;  \n"
"")
        self.label_3.setObjectName("label_3")
        self.fil_json = QtWidgets.QPushButton(self.tab_3)
        self.fil_json.setGeometry(QtCore.QRect(510, 105, 61, 61))
        self.fil_json.setStyleSheet("QPushButton{\n"
" background: url(./img/json_imp_off.png);\n"
"background-position: center ;\n"
"border: none;\n"
"}\n"
"\n"
"QPushButton:Hover {\n"
"background: url(./img/json_imp_hov.png);\n"
"background-position: center ;\n"
"\n"
"}\n"
"QPushButton:pressed {\n"
" background: url(./img/json_imp_on.png);\n"
"background-position: center ;\n"
"\n"
"}\n"
"QToolTip {\n"
"font: 10pt \"Roboto\";\n"
"background-color: rgb(64, 64, 64); \n"
"color: white; \n"
"border: 2px solid  rgb(93, 92, 92);\n"
"}")
        self.fil_json.setText("")
        self.fil_json.setObjectName("fil_json")
        self.label_5 = QtWidgets.QLabel(self.tab_3)
        self.label_5.setGeometry(QtCore.QRect(580, 0, 201, 41))
        self.label_5.setStyleSheet("font: 87 14pt \"Roboto\";\n"
"color: rgb(255, 255, 255);\n"
"background-color:none;\n"
"border: none;  \n"
"\n"
"")
        self.label_5.setObjectName("label_5")
        self.lineEdit = QtWidgets.QLineEdit(self.tab_3)
        self.lineEdit.setGeometry(QtCore.QRect(0, 600, 361, 31))
        self.lineEdit.setStyleSheet("QLineEdit {\n"
"font: 10pt \"Roboto\";\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(93, 92, 92);\n"
" border: 3px solid  #dc6a00;  \n"
"    border-radius: 10px;\n"
"}\n"
"QToolTip { \n"
"font: 10pt \"Roboto\";\n"
"background-color: rgb(64, 64, 64); \n"
"color: white; \n"
"border: 2px solid  rgb(93, 92, 92);\n"
"}")
        self.lineEdit.setText("")
        self.lineEdit.setObjectName("lineEdit")
        self.label_4 = QtWidgets.QLabel(self.tab_3)
        self.label_4.setGeometry(QtCore.QRect(120, 550, 111, 21))
        self.label_4.setStyleSheet("QLabel{\n"
"font: 87 14pt \"Roboto\";\n"
"color: rgb(255, 255, 255);\n"
"background-color:none;\n"
" border: none;  \n"
"}")
        self.label_4.setObjectName("label_4")
        self.comboBox = QtWidgets.QComboBox(self.tab_3)
        self.comboBox.setGeometry(QtCore.QRect(30, 410, 291, 41))
        self.comboBox.setStyleSheet("QComboBox {\n"
"font: 10pt \"Roboto\";\n"
"padding: 5px 5px 5px 5px;\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(93, 92, 92);\n"
" border: 3px solid  #dc6a00;  \n"
"    border-radius: 5px;\n"
"\n"
"}\n"
"QComboBox QAbstractItemView {\n"
"\n"
"    background-color:  rgb(93, 92, 92);\n"
"    border: 3px solid #dc6a00;\n"
"    border-radius: 5px;\n"
"    color: white;\n"
"    padding: 5px 5px 5px 5px;\n"
"    selection-background-color: rgb(88, 88, 88);\n"
"    selection-color: rgb(200, 200, 200);\n"
"}\n"
"\n"
"QComboBox::drop-down \n"
"{\n"
"    border: 0px; \n"
"}\n"
"QComboBox::down-arrow{\n"
" background: url(./img/arrow_combo_box-3.png);\n"
"background-position: center ;\n"
"border:  rgb(93, 92, 92);\n"
"border-radius: 5px;\n"
"\n"
"}\n"
"QComboBox:on { \n"
"    padding-top: 3px;\n"
"    padding-left: 4px;\n"
"}\n"
"QComboBox::down-arrow:on {\n"
"    top: 1px;\n"
"    left: 1px;\n"
"}\n"
"")
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.tab_3)
        self.lineEdit_2.setGeometry(QtCore.QRect(490, 290, 351, 31))
        self.lineEdit_2.setStyleSheet("QLineEdit {\n"
"font: 10pt \"Roboto\";\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(93, 92, 92);\n"
" border: 3px solid  #dc6a00;  \n"
"    border-radius: 10px;\n"
"}")
        self.lineEdit_2.setText("")
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.label_7 = QtWidgets.QLabel(self.tab_3)
        self.label_7.setGeometry(QtCore.QRect(10, 360, 351, 31))
        self.label_7.setStyleSheet("font: 87 14pt \"Roboto\";\n"
"color: rgb(255, 255, 255);\n"
"background-color:none;\n"
"border: none;  \n"
"\n"
"")
        self.label_7.setObjectName("label_7")
        self.checkBox_city_on = QtWidgets.QCheckBox(self.tab_3)
        self.checkBox_city_on.setGeometry(QtCore.QRect(380, 210, 261, 41))
        self.checkBox_city_on.setStyleSheet("QCheckBox {\n"
"font: 87 9pt \"Roboto\";\n"
"color: rgb(255, 255, 255);\n"
"background-color:none;\n"
"border: none;  \n"
"}\n"
"QCheckBox::indicator:checked {\n"
"    color: #b1b1b1;\n"
"   background: url(./img/check_box.png);\n"
"background-position: center ;\n"
"\n"
"    border: 2px solid rgb(93, 92, 92);\n"
"    border-radius: 5px;\n"
"    width: 12px;\n"
"    height: 12px;\n"
"    \n"
"} \n"
"QCheckBox::indicator:unchecked {\n"
"    color: #b1b1b1;\n"
"    background-color: rgb(93, 92, 92);\n"
"    border: 2px solid rgb(93, 92, 92);\n"
"    border-radius: 5px;\n"
"    width: 12px;\n"
"    height:12px;\n"
"    \n"
"} \n"
"QToolTip { \n"
"font: 10pt \"Roboto\";\n"
"background-color: rgb(64, 64, 64); \n"
"color: white; \n"
"border: 2px solid  rgb(93, 92, 92);\n"
"}")
        self.checkBox_city_on.setObjectName("checkBox_city_on")
        self.label_8 = QtWidgets.QLabel(self.tab_3)
        self.label_8.setGeometry(QtCore.QRect(450, 40, 471, 31))
        self.label_8.setStyleSheet("color: rgb(255, 255, 255);\n"
"font: 57 10pt \"Roboto Medium\";\n"
"background-color:none;\n"
"border: none;  \n"
"")
        self.label_8.setObjectName("label_8")
        self.label_9 = QtWidgets.QLabel(self.tab_3)
        self.label_9.setGeometry(QtCore.QRect(530, 70, 271, 31))
        self.label_9.setStyleSheet("color: rgb(255, 255, 255);\n"
"font: 57 10pt \"Roboto Medium\";\n"
"background-color:none;\n"
"border: none;  \n"
"")
        self.label_9.setObjectName("label_9")
        self.label_10 = QtWidgets.QLabel(self.tab_3)
        self.label_10.setGeometry(QtCore.QRect(510, 170, 291, 41))
        self.label_10.setStyleSheet("color: rgb(255, 255, 255);\n"
"font: 57 10pt \"Roboto Medium\";\n"
"background-color:none;\n"
"border: none;  \n"
"\n"
"")
        self.label_10.setObjectName("label_10")
        self.label_11 = QtWidgets.QLabel(self.tab_3)
        self.label_11.setGeometry(QtCore.QRect(560, 250, 221, 31))
        self.label_11.setStyleSheet("color: rgb(255, 255, 255);\n"
"font: 57 10pt \"Roboto Medium\";\n"
"background-color:none;\n"
"border: none;  \n"
"\n"
"")
        self.label_11.setObjectName("label_11")
        self.label_12 = QtWidgets.QLabel(self.tab_3)
        self.label_12.setGeometry(QtCore.QRect(530, 340, 301, 31))
        self.label_12.setStyleSheet("color: rgb(255, 255, 255);\n"
"font: 57 10pt \"Roboto Medium\";\n"
"background-color:none;\n"
"border: none;  \n"
"\n"
"")
        self.label_12.setObjectName("label_12")
        self.checkBox_bbox = QtWidgets.QCheckBox(self.tab_3)
        self.checkBox_bbox.setGeometry(QtCore.QRect(660, 380, 181, 41))
        self.checkBox_bbox.setStyleSheet("QCheckBox {\n"
"font: 87 9pt \"Roboto\";\n"
"color: rgb(255, 255, 255);\n"
"background-color:none;\n"
"border: none;  \n"
"}\n"
"QCheckBox::indicator:checked {\n"
"    color: #b1b1b1;\n"
"   background: url(./img/check_box.png);\n"
"background-position: center ;\n"
"background-color: rgb(93, 92, 92);\n"
"    border: 2px solid rgb(93, 92, 92);\n"
"    border-radius: 5px;\n"
"    width: 12px;\n"
"    height: 12px;\n"
"    \n"
"} \n"
"QCheckBox::indicator:unchecked {\n"
"    color: #b1b1b1;\n"
"    background-color: rgb(93, 92, 92);\n"
"    border: 2px solid rgb(93, 92, 92);\n"
"    border-radius: 5px;\n"
"    width: 12px;\n"
"    height:12px;\n"
"    \n"
"} ")
        self.checkBox_bbox.setObjectName("checkBox_bbox")
        self.lineEdit_x1 = QtWidgets.QLineEdit(self.tab_3)
        self.lineEdit_x1.setGeometry(QtCore.QRect(390, 520, 251, 31))
        self.lineEdit_x1.setStyleSheet("QLineEdit {\n"
"font: 10pt \"Roboto\";\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(93, 92, 92);\n"
" border: 3px solid  #dc6a00;  \n"
"    border-radius: 10px;\n"
"}\n"
"QToolTip {\n"
"font: 10pt \"Roboto\";\n"
"background-color: rgb(64, 64, 64); \n"
"color: white; \n"
"border: 2px solid  rgb(93, 92, 92);\n"
"}")
        self.lineEdit_x1.setText("")
        self.lineEdit_x1.setObjectName("lineEdit_x1")
        self.label_13 = QtWidgets.QLabel(self.tab_3)
        self.label_13.setGeometry(QtCore.QRect(590, 440, 161, 31))
        self.label_13.setStyleSheet("color: rgb(255, 255, 255);\n"
"font: 57 10pt \"Roboto Medium\";\n"
"background-color:none;\n"
"border: none;  \n"
"\n"
"")
        self.label_13.setObjectName("label_13")
        self.checkBox_city_query = QtWidgets.QCheckBox(self.tab_3)
        self.checkBox_city_query.setGeometry(QtCore.QRect(660, 210, 311, 41))
        self.checkBox_city_query.setStyleSheet("QCheckBox {\n"
"font: 87 9pt \"Roboto\";\n"
"color: rgb(255, 255, 255);\n"
"background-color:none;\n"
"border: none;  \n"
"}\n"
"QCheckBox::indicator:checked {\n"
"    color: #b1b1b1;\n"
"   background: url(./img/check_box.png);\n"
"background-position: center ;\n"
"background-color: rgb(93, 92, 92);\n"
"    border: 2px solid rgb(93, 92, 92);\n"
"    border-radius: 5px;\n"
"    width: 12px;\n"
"    height: 12px;\n"
"    \n"
"} \n"
"QCheckBox::indicator:unchecked {\n"
"    color: #b1b1b1;\n"
"    background-color: rgb(93, 92, 92);\n"
"    border: 2px solid rgb(93, 92, 92);\n"
"    border-radius: 5px;\n"
"    width: 12px;\n"
"    height:12px;\n"
"    \n"
"} ")
        self.checkBox_city_query.setObjectName("checkBox_city_query")
        self.checkBox_filter_geojson = QtWidgets.QCheckBox(self.tab_3)
        self.checkBox_filter_geojson.setGeometry(QtCore.QRect(660, 120, 181, 31))
        self.checkBox_filter_geojson.setStyleSheet("QCheckBox {\n"
"font: 87 9pt \"Roboto\";\n"
"color: rgb(255, 255, 255);\n"
"background-color:none;\n"
"border: none;  \n"
"\n"
"}\n"
"QCheckBox::indicator:checked {\n"
"    color: #b1b1b1;\n"
"   background: url(./img/check_box.png);\n"
"background-position: center ;\n"
"background-color: rgb(93, 92, 92);\n"
"    border: 2px solid rgb(93, 92, 92);\n"
"    border-radius: 5px;\n"
"    width: 12px;\n"
"    height: 12px;\n"
"    \n"
"} \n"
"QCheckBox::indicator:unchecked {\n"
"    color: #b1b1b1;\n"
"    background-color: rgb(93, 92, 92);\n"
"    border: 2px solid rgb(93, 92, 92);\n"
"    border-radius: 5px;\n"
"    width: 12px;\n"
"    height:12px;\n"
"    \n"
"} \n"
"QToolTip { \n"
"font: 10pt \"Roboto\";\n"
"background-color: rgb(64, 64, 64); \n"
"color: white; \n"
"border: 2px solid  rgb(93, 92, 92);\n"
"}")
        self.checkBox_filter_geojson.setObjectName("checkBox_filter_geojson")
        self.lineEdit_y1 = QtWidgets.QLineEdit(self.tab_3)
        self.lineEdit_y1.setGeometry(QtCore.QRect(710, 520, 251, 31))
        self.lineEdit_y1.setStyleSheet("QLineEdit {\n"
"font: 10pt \"Roboto\";\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(93, 92, 92);\n"
" border: 3px solid  #dc6a00;  \n"
"    border-radius: 10px;\n"
"}\n"
"QToolTip {\n"
"font: 10pt \"Roboto\";\n"
"background-color: rgb(64, 64, 64); \n"
"color: white; \n"
"border: 2px solid  rgb(93, 92, 92);\n"
"}")
        self.lineEdit_y1.setText("")
        self.lineEdit_y1.setObjectName("lineEdit_y1")
        self.lineEdit_x2 = QtWidgets.QLineEdit(self.tab_3)
        self.lineEdit_x2.setGeometry(QtCore.QRect(390, 660, 251, 31))
        self.lineEdit_x2.setStyleSheet("QLineEdit {\n"
"font: 10pt \"Roboto\";\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(93, 92, 92);\n"
" border: 3px solid  #dc6a00;  \n"
"    border-radius: 10px;\n"
"}\n"
"QToolTip {\n"
"font: 10pt \"Roboto\";\n"
"background-color: rgb(64, 64, 64); \n"
"color: white; \n"
"border: 2px solid  rgb(93, 92, 92);\n"
"}")
        self.lineEdit_x2.setText("")
        self.lineEdit_x2.setObjectName("lineEdit_x2")
        self.lineEdit_y2 = QtWidgets.QLineEdit(self.tab_3)
        self.lineEdit_y2.setGeometry(QtCore.QRect(710, 660, 251, 31))
        self.lineEdit_y2.setStyleSheet("QLineEdit {\n"
"font: 10pt \"Roboto\";\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(93, 92, 92);\n"
" border: 3px solid  #dc6a00;  \n"
"    border-radius: 10px;\n"
"}\n"
"QToolTip {\n"
"font: 10pt \"Roboto\";\n"
"background-color: rgb(64, 64, 64); \n"
"color: white; \n"
"border: 2px solid  rgb(93, 92, 92);\n"
"}")
        self.lineEdit_y2.setText("")
        self.lineEdit_y2.setObjectName("lineEdit_y2")
        self.label_14 = QtWidgets.QLabel(self.tab_3)
        self.label_14.setGeometry(QtCore.QRect(590, 574, 181, 31))
        self.label_14.setStyleSheet("color: rgb(255, 255, 255);\n"
"font: 57 10pt \"Roboto Medium\";\n"
"background-color:none;\n"
"border: none;  ")
        self.label_14.setObjectName("label_14")
        self.label_15 = QtWidgets.QLabel(self.tab_3)
        self.label_15.setGeometry(QtCore.QRect(460, 470, 121, 31))
        self.label_15.setStyleSheet("color: rgb(255, 255, 255);\n"
"font: 57 10pt \"Roboto Medium\";\n"
"background-color:none;\n"
"border: none;  \n"
"\n"
"")
        self.label_15.setObjectName("label_15")
        self.label_16 = QtWidgets.QLabel(self.tab_3)
        self.label_16.setGeometry(QtCore.QRect(460, 610, 111, 31))
        self.label_16.setStyleSheet("color: rgb(255, 255, 255);\n"
"font: 57 10pt \"Roboto Medium\";\n"
"background-color:none;\n"
"border: none;  \n"
"\n"
"")
        self.label_16.setObjectName("label_16")
        self.label_6 = QtWidgets.QLabel(self.tab_3)
        self.label_6.setGeometry(QtCore.QRect(86, 30, 171, 41))
        self.label_6.setStyleSheet("font: 87 14pt \"Roboto\";\n"
"color: rgb(255, 255, 255);\n"
"background-color:none;\n"
"border: none;  \n"
"\n"
"")
        self.label_6.setObjectName("label_6")
        self.label_17 = QtWidgets.QLabel(self.tab_3)
        self.label_17.setGeometry(QtCore.QRect(780, 470, 111, 31))
        self.label_17.setStyleSheet("color: rgb(255, 255, 255);\n"
"font: 57 10pt \"Roboto Medium\";\n"
"background-color:none;\n"
"border: none;  \n"
"")
        self.label_17.setObjectName("label_17")
        self.label_18 = QtWidgets.QLabel(self.tab_3)
        self.label_18.setGeometry(QtCore.QRect(780, 610, 111, 31))
        self.label_18.setStyleSheet("color: rgb(255, 255, 255);\n"
"font: 57 10pt \"Roboto Medium\";\n"
"background-color:none;\n"
"border: none;  \n"
"\n"
"")
        self.label_18.setObjectName("label_18")
        self.Button_bbox_on = QtWidgets.QPushButton(self.tab_3)
        self.Button_bbox_on.setGeometry(QtCore.QRect(460, 380, 161, 41))
        self.Button_bbox_on.setStyleSheet("QPushButton{\n"
"font: 87 10pt \"Roboto\";\n"
"color: rgb(255, 255, 255);\n"
"\n"
"background-color: rgb(220, 106, 0);\n"
"background-position: center ;\n"
" border: 3px solid  rgb(93, 92, 92);  \n"
"    border-radius: 10px;\n"
"}\n"
"\n"
"QPushButton:Hover {\n"
"background-color: rgb(255, 119, 0);\n"
"background-position: center ;\n"
" border: 3px solid  rgb(93, 92, 92);  \n"
"    border-radius: 10px;\n"
"\n"
"}\n"
"QPushButton:pressed {\n"
"background-color: rgb(255, 132, 0);\n"
" border: 3px solid  rgb(93, 92, 92);  \n"
"    border-radius: 10px;\n"
"}")
        self.Button_bbox_on.setObjectName("Button_bbox_on")
        self.tabWidget.addTab(self.tab_3, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.webView = QWebEngineView(self.tab_2)
        self.webView.setGeometry(QtCore.QRect(0, 0, 971, 701))
        self.webView.setProperty("url", QtCore.QUrl("about:blank"))
        self.webView.setObjectName("webView")
        self.tabWidget.addTab(self.tab_2, "")
        MainWindow.setCentralWidget(self.centralwidget)
        self.actionCSV = QtWidgets.QAction(MainWindow)
        self.actionCSV.setObjectName("actionCSV")
        self.actionGeoJSON = QtWidgets.QAction(MainWindow)
        self.actionGeoJSON.setObjectName("actionGeoJSON")
        self.actionGeoJSON_2 = QtWidgets.QAction(MainWindow)
        self.actionGeoJSON_2.setObjectName("actionGeoJSON_2")
        self.action = QtWidgets.QAction(MainWindow)
        self.action.setObjectName("action")
        self.action_5 = QtWidgets.QAction(MainWindow)
        self.action_5.setObjectName("action_5")
        self.action_6 = QtWidgets.QAction(MainWindow)
        self.action_6.setObjectName("action_6")
        self.action_7 = QtWidgets.QAction(MainWindow)
        self.action_7.setObjectName("action_7")
        self.action_8 = QtWidgets.QAction(MainWindow)
        self.action_8.setObjectName("action_8")
        self.action_10 = QtWidgets.QAction(MainWindow)
        self.action_10.setObjectName("action_10")

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Geocoder"))
        self.label_2.setText(_translate("MainWindow", "Просмотр таблицы входного файла:"))
        self.label.setText(_translate("MainWindow", "Выбор файла:"))
        self.Button_start.setText(_translate("MainWindow", "Запуск"))
        self.checkBox.setText(_translate("MainWindow", "Показать результат на карте"))
        self.lineEdit_id.setToolTip(_translate("MainWindow", "<html><head/><body><p align=\"center\">Использовать только при пакетном геокодировании</p></body></html>"))
        self.label_id.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\">Идентификатор запроса:</p></body></html>"))
        self.Button_check_id.setToolTip(_translate("MainWindow", "<html><head/><body><p align=\"center\">Использовать только при пакетном геокодировании</p></body></html>"))
        self.Button_check_id.setText(_translate("MainWindow", "Проверить статус запроса"))
        self.Button_check_id_auto.setToolTip(_translate("MainWindow", "<html><head/><body><p align=\"center\">Использовать только при пакетном геокодировании</p></body></html>"))
        self.Button_check_id_auto.setText(_translate("MainWindow", "Автоматическая проверка\n"
"статуса"))
        self.checkBox_create_json.setToolTip(_translate("MainWindow", "<html><head/><body><p align=\"center\">GeoJSON имеет то же имя и директорию, что и у CSV-файла</p></body></html>"))
        self.checkBox_create_json.setText(_translate("MainWindow", "Выгрузить в формате GeoJSON"))
        self.comboBox_delimiter.setItemText(0, _translate("MainWindow", ";"))
        self.comboBox_delimiter.setItemText(1, _translate("MainWindow", ","))
        self.label_id_3.setText(_translate("MainWindow", "Выбор разделителя:"))
        self.loading.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\">Пожалуйста, подождите</p></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "Выбор файла"))
        self.Button_delete.setText(_translate("MainWindow", "Снять выделение"))
        self.Button_select.setText(_translate("MainWindow", "Выбрать все"))
        self.label_3.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\">Выберете поля или </p></body></html>"))
        self.fil_json.setToolTip(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-family:\'Calibri,sans-serif\'; font-size:11pt;\">Не использовать при пакетном геокодировании. <br/>Пространственные данные в географической системе координат</span></p></body></html>"))
        self.label_5.setText(_translate("MainWindow", "Выбор фильтров:"))
        self.lineEdit.setToolTip(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-family:\'Calibri,sans-serif\'; font-size:11pt;\">Не заполнять поле при использовании Nominatim API (OSM)</span></p></body></html>"))
        self.label_4.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\">API-ключ:</p></body></html>"))
        self.comboBox.setItemText(0, _translate("MainWindow", "Nominatim API (OSM)"))
        self.comboBox.setItemText(1, _translate("MainWindow", "Геокодер API Яндекс"))
        self.comboBox.setItemText(2, _translate("MainWindow", "HERE Geocoding API"))
        self.comboBox.setItemText(3, _translate("MainWindow", "HERE Batch Geocoding API"))
        self.label_7.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\">Выбор сервиса геокодирования:</p></body></html>"))
        self.checkBox_city_on.setToolTip(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-family:\'Calibri,sans-serif\'; font-size:11pt;\">Не использовать при пакетном геокодировании </span></p></body></html>"))
        self.checkBox_city_on.setText(_translate("MainWindow", "Поиск по наименованию города"))
        self.label_8.setText(_translate("MainWindow", "Проверка принадлежности адресов к выбранной геометрии"))
        self.label_9.setText(_translate("MainWindow", " в формате GeoJson (EPSG: 4326)"))
        self.label_10.setText(_translate("MainWindow", "Поиск в пределах заданного города"))
        self.label_11.setText(_translate("MainWindow", "Введите название города:"))
        self.label_12.setText(_translate("MainWindow", "Поиск в пределах заданного охвата"))
        self.checkBox_bbox.setText(_translate("MainWindow", "Активация фильтра"))
        self.lineEdit_x1.setToolTip(_translate("MainWindow", "<html><head/><body><p align=\"center\">В качестве разделителя целой и дробной частей используйте «точку»</p></body></html>"))
        self.label_13.setText(_translate("MainWindow", "Левый нижний угол:"))
        self.checkBox_city_query.setText(_translate("MainWindow", "Добавить наименования города в запрос"))
        self.checkBox_filter_geojson.setToolTip(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-family:\'Calibri,sans-serif\'; font-size:11pt;\">Не использовать при пакетном геокодировании <br/>Пространственные данные в географической системе координат</span></p></body></html>"))
        self.checkBox_filter_geojson.setText(_translate("MainWindow", "Активация фильтра"))
        self.lineEdit_y1.setToolTip(_translate("MainWindow", "<html><head/><body><p align=\"center\">В качестве разделителя целой и дробной частей используйте «точку»</p></body></html>"))
        self.lineEdit_x2.setToolTip(_translate("MainWindow", "<html><head/><body><p align=\"center\">В качестве разделителя целой и дробной частей используйте «точку»</p></body></html>"))
        self.lineEdit_y2.setToolTip(_translate("MainWindow", "<html><head/><body><p align=\"center\">В качестве разделителя целой и дробной частей используйте «точку»</p></body></html>"))
        self.label_14.setText(_translate("MainWindow", "Правый верхний угол:"))
        self.label_15.setText(_translate("MainWindow", "X1 (долгота):"))
        self.label_16.setText(_translate("MainWindow", "X2 (долгота):"))
        self.label_6.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\">поле с адресом:</p></body></html>"))
        self.label_17.setText(_translate("MainWindow", "Y1 (широта):"))
        self.label_18.setText(_translate("MainWindow", "Y2 (широта):"))
        self.Button_bbox_on.setText(_translate("MainWindow", "Показать на карте"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("MainWindow", "Фильтры"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Карта"))
        self.actionCSV.setText(_translate("MainWindow", "CSV"))
        self.actionGeoJSON.setText(_translate("MainWindow", "GeoJSON"))
        self.actionGeoJSON_2.setText(_translate("MainWindow", "GeoJSON"))
        self.action.setText(_translate("MainWindow", "Удалить фильтр"))
        self.action_5.setText(_translate("MainWindow", "Удалить фильтр"))
        self.action_6.setText(_translate("MainWindow", "Указать тип поля"))
        self.action_7.setText(_translate("MainWindow", "Город"))
        self.action_8.setText(_translate("MainWindow", "Улица"))
        self.action_10.setText(_translate("MainWindow", "Удалить фильтр"))

